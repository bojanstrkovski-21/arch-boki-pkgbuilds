post_install() {
echo "Starting post-install script..."

# Check if $HOME is set and valid

if [ -z "$HOME" ] || [ ! -d "$HOME" ]; then
echo "Error: HOME is not set or invalid ($HOME). Please manually copy files from /etc/skel/.config to ~/.config."
return 1
fi
echo "HOME is set to: $HOME"

# Ensure $HOME/.config exists

local config_dir="$HOME/.config"
if [ ! -d "$config_dir" ]; then
echo "Creating $config_dir..."
mkdir -p "$config_dir" || {
echo "Error: Failed to create $config_dir."
return 1
}
fi
echo "$config_dir exists or was created."

# Ensure $HOME/.local/share exists

local local_dir="$HOME/.local/share"
if [ ! -d "$local_dir" ]; then
echo "Creating $local_dir..."
mkdir -p "$local_dir" || {
echo "Error: Failed to create $local_dir."
return 1
}
fi
echo "$local_dir exists or was created."

local source_config="/etc/skel/.config"
local source_local="/etc/skel/.local/share"
local backup_dir="$HOME/.config/backup-$(date +%Y%m%d%H%M%S)"

# Handle .config directories

for dir in launcher Launcher3 launcher-aditaya powermenu powermenu-2 rofi; do
echo "Checking $source_config/$dir..."
if [ -d "$source_config/$dir" ]; then

# Check if target directory exists

if [ -e "$config_dir/$dir" ]; then
echo "Found existing $config_dir/$dir. Backing up..."
mkdir -p "$backup_dir" || {
echo "Error: Failed to create backup directory $backup_dir."
return 1
}
mv "$config_dir/$dir" "$backup_dir/$dir" || {
echo "Error: Failed to back up $config_dir/$dir to $backup_dir/$dir."
return 1
}
echo "Backed up $config_dir/$dir to $backup_dir/$dir."
else
echo "No existing $config_dir/$dir found."
fi

# Copy the directory

echo "Copying $source_config/$dir to $config_dir/$dir..."
cp -r "$source_config/$dir" "$config_dir/$dir" || {
echo "Error: Failed to copy $source_config/$dir to $config_dir/$dir."
return 1
}
echo "Successfully copied $source_config/$dir to $config_dir/$dir."
else
echo "Error: Source directory $source_config/$dir does not exist. Skipping."
fi
done

# Handle .local/share/rofi

echo "Checking $source_local/rofi..."
if [ -d "$source_local/rofi" ]; then

#Check if target rofi directory exists

if [ -e "$local_dir/rofi" ]; then
echo "Found existing $local_dir/rofi. Backing up..."
mkdir -p "$backup_dir" || {
echo "Error: Failed to create backup directory $backup_dir."
return 1
}
mv "$local_dir/rofi" "$backup_dir/rofi" || {
echo "Error: Failed to back up $local_dir/rofi to $backup_dir/rofi."
return 1
}
echo "Backed up $local_dir/rofi to $backup_dir/rofi."
else
echo "No existing $local_dir/rofi found."
fi

# Copy the rofi directory

echo "Copying $source_local/rofi to $local_dir/rofi..."
cp -r "$source_local/rofi" "$local_dir/rofi" || {
echo "Error: Failed to copy $source_local/rofi to $local_dir/rofi."
return 1
}
echo "Successfully copied $source_local/rofi to $local_dir/rofi."
else
echo "Error: Source directory $source_local/rofi does not exist. Skipping."
fi

echo "Post-install complete. Configuration files copied to $config_dir and $local_dir."
}

post_upgrade() {
	post_install
echo "Upgrade detected. Skipping copy to ~/.config and ~/.local/share to preserve user configurations."
echo "To re-copy defaults, run:"
echo "  cp -r /etc/skel/.config/* ~/.config/"
echo "  cp -r /etc/skel/.local/share/* ~/.local/share/"
}

post_remove() {
echo "Note: Configuration files in ~/.config and ~/.local/share were not removed."
echo "Remove them manually if desired:"
echo "  rm -r ~/.config/{launcher,Launcher3,launcher-aditaya,powermenu,powermenu-2,rofi}"
echo "  rm -r ~/.local/share/rofi"
}